-------------------------------------------------------------------------------
--
--  Copyright (c) 2023 Francesc Rocher <francesc.rocher@gnail.com>
--  SPDX-License-Identifier: CC-BY-NC-SA-4.0
--  https://creativecommons.org/licenses/by-nc-sa/4.0/
--
--  ---------------------------------------------------------------------------
--
--  The following problem is taken from Project Euler:
--
--                 https://projecteuler.net/problem=2
--
--  Even Fibonacci numbers
--  ----------------------
--
--  Each new term in the Fibonacci sequence is generated by adding the
--  previous two terms. By starting with 1 and 2, the first 10 terms will be:
--
--                 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
--  By considering the terms in the Fibonacci sequence whose values do not
--  exceed four million, find the sum of the even-valued terms.
--
-------------------------------------------------------------------------------

with Graphic_Interface; use Graphic_Interface;

package P0002_Even_Fibonacci_Numbers is

   type P0002_Type is new Graphic_IFace with null record;

   overriding function Number (P : P0002_Type) return Natural is (2);

   overriding function Title (P : P0002_Type) return String is
     ("Even Fibonacci numbers");

   overriding function Brief (P : P0002_Type) return String is
     ("By considering the terms in the Fibonacci sequence whose values do " &
      "not exceed four million, find the sum of the even-valued terms.");

   overriding function Answer (P : P0002_Type) return String;

   overriding function Notes (P : P0002_Type) return String;

   overriding function Setup (P : P0002_Type) return Boolean is (True);

   overriding function Update (P : P0002_Type) return Boolean is (True);
end P0002_Even_Fibonacci_Numbers;
